-- ============================================================
-- CORE & ROUTE SYSTEM (HRP, CFrame, lerp, bypass)
-- ============================================================
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local VirtualUser = game:GetService("VirtualUser")
local player = Players.LocalPlayer
local hrp = nil
local frameTime, playbackRate, isRunning = 1/30, 1.0, false
local intervalFlip, bypassActive, antiBetonActive = false, false, false
local routes = {}
local antiIdleConn, bypassConn, antiBetonConn

-- ICON PACKS
local Packs = {
    lucide = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/Footagesus/Icons/refs/heads/main/lucide/dist/Icons.lua"))(),
    craft  = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/Footagesus/Icons/refs/heads/main/craft/dist/Icons.lua"))(),
    geist  = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/Footagesus/Icons/refs/heads/main/geist/dist/Icons.lua"))(),
}

-- ============================================================
-- HRP REFRESH
-- ============================================================
local function refreshHRP(char)
    char = char or player.Character or player.CharacterAdded:Wait()
    hrp = char:WaitForChild("HumanoidRootPart")
end
if player.Character then refreshHRP(player.Character) end
player.CharacterAdded:Connect(refreshHRP)

-- ============================================================
-- ROUTE UTILS
-- ============================================================
local DEFAULT_HEIGHT = 5.469823837280273
local function getCurrentHeight()
    local char = player.Character or player.CharacterAdded:Wait()
    local humanoid = char:WaitForChild("Humanoid")
    return humanoid.HipHeight + ((char:FindFirstChild("Head") and char.Head.Size.Y) or 2)
end

local function adjustRoute(frames)
    local adjusted, offsetY = {}, getCurrentHeight() - DEFAULT_HEIGHT
    for _, cf in ipairs(frames) do
        local pos, rot = cf.Position, cf - cf.Position
        table.insert(adjusted, CFrame.new(pos.X, pos.Y + offsetY, pos.Z) * rot)
    end
    return adjusted
end

local function removeDuplicateFrames(frames, tolerance)
    tolerance = tolerance or 0.01
    if #frames < 2 then return frames end
    local newFrames = {frames[1]}
    for i = 2, #frames do
        local prev, curr = frames[i-1], frames[i]
        local posDiff = (prev.Position - curr.Position).Magnitude
        local rotDiff = ((prev - prev.Position).Position - (curr - curr.Position).Position).Magnitude
        if posDiff > tolerance or rotDiff > tolerance then table.insert(newFrames, curr) end
    end
    return newFrames
end

local function applyIntervalRotation(cf)
    if intervalFlip then return CFrame.new(cf.Position) * CFrame.Angles(0, math.pi, 0) * (cf - cf.Position)
    else return cf end
end

local function loadRoute(url)
    local ok, result = pcall(function() return loadstring(game:HttpGet(url))() end)
    if ok and type(result) == "table" then return adjustRoute(removeDuplicateFrames(result)) 
    else warn("Gagal load route dari: "..url) return {} end
end

-- Example route
routes = {{"BASE → SUMMIT", loadRoute("https://raw.githubusercontent.com/LlyXCode/WASABI/refs/heads/main/01.lua")}}

-- ============================================================
-- HELPER
-- ============================================================
local function respawnPlayer() player.Character:BreakJoints() end

local function getNearestRoute()
    if not hrp then return 1 end
    local nearestIdx, dist = 1, math.huge
    for i,data in ipairs(routes) do
        for _,cf in ipairs(data[2]) do
            local d = (cf.Position - hrp.Position).Magnitude
            if d < dist then dist, nearestIdx = d, i end
        end
    end
    return nearestIdx
end

local function getNearestFrameIndex(frames)
    if not hrp then return 1 end
    local startIdx, dist = 1, math.huge
    for i,cf in ipairs(frames) do
        local d = (cf.Position - hrp.Position).Magnitude
        if d < dist then dist, startIdx = d, i end
    end
    return math.min(startIdx, #frames-1)
end

local function lerpCF(fromCF, toCF)
    fromCF, toCF = applyIntervalRotation(fromCF), applyIntervalRotation(toCF)
    local duration, t = frameTime / math.max(0.05, playbackRate), 0
    while t < duration do
        if not isRunning then break end
        t += task.wait()
        if hrp and hrp.Parent then hrp.CFrame = fromCF:Lerp(toCF, math.min(t/duration, 1)) end
    end
end

-- ============================================================
-- BYPASS
-- ============================================================
local function setupBypass(char)
    local humanoid = char:WaitForChild("Humanoid")
    local hrp = char:WaitForChild("HumanoidRootPart")
    local lastPos = hrp.Position
    if bypassConn then bypassConn:Disconnect() end
    bypassConn = RunService.RenderStepped:Connect(function()
        if not hrp or not hrp.Parent or not bypassActive then return end
        local dir = hrp.Position - lastPos
        local dist, yDiff = dir.Magnitude, hrp.Position.Y - lastPos.Y
        if yDiff > 0.5 then humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        elseif yDiff < -1 then humanoid:ChangeState(Enum.HumanoidStateType.Freefall) end
        humanoid:Move(dist>0.01 and dir.Unit*math.clamp(dist*5,0,1) or Vector3.zero, false)
        lastPos = hrp.Position
    end)
end
player.CharacterAdded:Connect(setupBypass)
if player.Character then setupBypass(player.Character) end
local function setBypass(state) bypassActive=state end

-- ============================================================
-- ANTI BETON
-- ============================================================
local function enableAntiBeton()
    if antiBetonConn then antiBetonConn:Disconnect() end
    antiBetonConn = RunService.Stepped:Connect(function(_,dt)
        local char = player.Character
        if not char or not antiBetonActive then return end
        local hrp = char:FindFirstChild("HumanoidRootPart")
        local humanoid = char:FindFirstChild("Humanoid")
        if hrp and humanoid and humanoid.FloorMaterial==Enum.Material.Air then
            hrp.Velocity = Vector3.new(hrp.Velocity.X,(hrp.Velocity.Y + (-50-hrp.Velocity.Y)*math.clamp(dt*2.5,0,1)),hrp.Velocity.Z)
        end
    end)
end
local function disableAntiBeton() if antiBetonConn then antiBetonConn:Disconnect() antiBetonConn=nil end end

-- ============================================================
-- ROUTE CONTROL
-- ============================================================
local function runRouteOnce()
    if #routes==0 then return end
    if not hrp then refreshHRP() end
    isRunning, setBypass(true) = true, true
    local idx, frames = getNearestRoute(), routes[getNearestRoute()][2]
    local startIdx = getNearestFrameIndex(frames)
    for i=startIdx,#frames-1 do if not isRunning then break end; lerpCF(frames[i],frames[i+1]) end
    isRunning, setBypass(false) = false, false
end
local function runAllRoutes()
    if #routes==0 then return end
    isRunning = true
    while isRunning do
        if not hrp then refreshHRP() end
        setBypass(true)
        for r,getData in ipairs(routes) do
            local frames = getData[2]
            if #frames>=2 then
                local startIdx = getNearestFrameIndex(frames)
                for i=startIdx,#frames-1 do if not isRunning then break end; lerpCF(frames[i],frames[i+1]) end
            end
        end
        setBypass(false)
        if not isRunning then break end
        respawnPlayer()
        task.wait(5)
    end
end
local function stopRoute() isRunning=false; setBypass(false) end

-- ============================================================
-- ANTI-IDLE
-- ============================================================
local function enableAntiIdle()
    if antiIdleConn then antiIdleConn:Disconnect() end
    antiIdleConn = player.Idled:Connect(function()
        VirtualUser:CaptureController()
        VirtualUser:ClickButton2(Vector2.new())
    end)
end
enableAntiIdle()

-- ============================================================
-- WINDUI SETUP
-- ============================================================
local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()
local Window = WindUI:CreateWindow({Title="LlyXCode 〢 WASABI",Icon="lucide:mountain-snow",Folder="LlyXCode",Size=UDim2.fromOffset(580,460),Theme="Midnight",Resizable=true,SideBarWidth=200})
local notify=function(title,content,dur) pcall(function() WindUI:Notify({Title=title,Content=content or "",Duration=dur or 3,Icon="bell"}) end) end

-- Tabs
local MainTab = Window:Tab({Title="Main",Icon="geist:shareplay",Default=true})
local SettingsTab = Window:Tab({Title="Tools",Icon="geist:settings-sliders"})
local tampTab = Window:Tab({Title="Tampilan",Icon="lucide:app-window"})
local InfoTab = Window:Tab({Title="Info",Icon="lucide:info"})

-- ==============================
-- MAIN TAB
-- ==============================
MainTab:Dropdown({Title="Speed",Icon="lucide:zap",Values=(function() local t={} for v=0.25,3,0.25 do table.insert(t,string.format("%.2fx",v)) end return t end)(),Value="1.00x",Callback=function(opt) playbackRate=tonumber(opt:match("([%d%.]+)")) or playbackRate end})
MainTab:Toggle({Title="Interval Flip",Icon="lucide:refresh-ccw",Desc="ON → Hadap belakang tiap frame",Value=false,Callback=function(state) intervalFlip=state end})
MainTab:Toggle({Title="Anti Beton Ultra-Smooth",Icon="lucide:shield",Desc="Mencegah jatuh secara kaku saat melayang",Value=false,Callback=function(state) antiBetonActive=state if state then enableAntiBeton() else disableAntiBeton() end end})
MainTab:Button({Title="START",Icon="craft:back-to-start-stroke",Desc="Mulai dari checkpoint terdekat",Callback=function() pcall(runRouteOnce) end})
MainTab:Button({Title="AWAL KE AKHIR",Desc="Jalankan semua checkpoint",Icon="craft:back-to-start-stroke",Callback=function() pcall(runAllRoutes) end})
MainTab:Button({Title="Stop track",Icon="geist:stop-circle",Desc="Hentikan route",Callback=function() pcall(stopRoute) end})
for idx,data in ipairs(routes) do
    MainTab:Button({Title="TRACK "..data[1],Icon="lucide:train-track",Desc="Jalankan dari "..data[1],Callback=function() pcall(function() runRouteOnce() end) end})
end

-- FINAL NOTIFY
notify("LlyXCode","Script sudah load, gunakan dengan bijak.",3)
pcall(function() Window:Show() MainTab:Show() end)
